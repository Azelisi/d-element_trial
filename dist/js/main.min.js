/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../app/js/modules/init-menu.js":
/*!**************************************!*\
  !*** ../app/js/modules/init-menu.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initMenu": () => (/* binding */ initMenu)
/* harmony export */ });
const menu = document.querySelector('.main-nav');
const toggleBtn = document.querySelector('.main-nav__toggle');
const body = document.querySelector('body');
const activeClass = 'main-nav--open';
const overflowHidden = 'overflow-hidden'

const openMenu = () => {
  menu.classList.add(activeClass);
  body.classList.add(overflowHidden)
}

const closeMenu = () => {
  menu.classList.remove(activeClass);
  body.classList.remove(overflowHidden)
}

const initMenu = () => {
  window.addEventListener('load', () => {
    if (toggleBtn) {
      toggleBtn.addEventListener('click', (evt) => {
        menu.classList.contains(activeClass) ? closeMenu() : openMenu();
      });

      document.addEventListener('click', (evt) => {
        const target = evt.target;
        if (!target.classList.contains('main-nav__toggle') && !evt.target.classList.contains('main-nav__wrapper')) {
          closeMenu();
        }
      })

      document.addEventListener('keydown', (evt) => {
        if (evt.key === 'Escape') {
          evt.preventDefault();
          closeMenu();
        }
      })
    }
  });
};




/***/ }),

/***/ "../app/js/modules/init-modals.js":
/*!****************************************!*\
  !*** ../app/js/modules/init-modals.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "initModals": () => (/* binding */ initModals),
/* harmony export */   "modalMessage": () => (/* binding */ modalMessage),
/* harmony export */   "modalSuccess": () => (/* binding */ modalSuccess)
/* harmony export */ });
/* harmony import */ var _utils_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/modal */ "../app/js/utils/modal.js");


const modals = document.querySelectorAll('.modal');
const modalMessage= document.querySelector('.modal--message');
const modalMessageBtns = document.querySelectorAll('[data-modal="message"]');
const modalSuccess = document.querySelector('.modal--success');
const modalSuccessBtns = document.querySelectorAll('[data-modal="success"]');

// аргументы setupModal(modal, closeCallback, modalBtns, openCallback, noPrevDefault, preventScrollLock)
// возможна инициализация только с первыми аргументом,
// если вам нужно открывать модалку в другом месте под какими-нибудь условиями
const initModals = () => {
  // фикс для редких случаев, когда модалка появляется при загрузке страницы
  window.addEventListener('load', () => {
    if (modals.length) {
      modals.forEach((el) => {
        setTimeout(() => {
          el.classList.remove('modal--preload');
        }, 100);
      });
    }
  });

  if (modalMessage && modalMessageBtns.length) {
    (0,_utils_modal__WEBPACK_IMPORTED_MODULE_0__.setupModal)(modalMessage, false, modalMessageBtns, false, false);
  }

  if (modalSuccess && modalSuccessBtns.length) {
    (0,_utils_modal__WEBPACK_IMPORTED_MODULE_0__.setupModal)(modalSuccess);
  }
};




/***/ }),

/***/ "../app/js/modules/validate-form.js":
/*!******************************************!*\
  !*** ../app/js/modules/validate-form.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "validateForm": () => (/* binding */ validateForm)
/* harmony export */ });
/* harmony import */ var _utils_modal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/modal */ "../app/js/utils/modal.js");
/* harmony import */ var _modules_init_modals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/init-modals */ "../app/js/modules/init-modals.js");



const closeBtn = _modules_init_modals__WEBPACK_IMPORTED_MODULE_1__.modalSuccess.querySelector('.modal__close-btn');

const validateForm = () => {
  const form = document.querySelector('form');
  const errorClass = 'form__field--error';

  if (form) {
    const submitBtn = form.querySelector('button[type=submit]');
    const inputs = form.querySelectorAll('input');
    const nameInput = document.querySelector('input[name="name"]');
    const phoneInput = document.querySelector('input[name="email"]');

    submitBtn.addEventListener('click', (evt) => {
      inputs.forEach((element) => {
        if (!element.validity.valid) {
          element.parentElement.classList.add(errorClass);
        } else {
          element.parentElement.classList.remove(errorClass);
          evt.preventDefault();
          if (nameInput.validity.valid && phoneInput.validity.valid) {
            if (_modules_init_modals__WEBPACK_IMPORTED_MODULE_1__.modalMessage.classList.contains('modal--active')) {
              (0,_utils_modal__WEBPACK_IMPORTED_MODULE_0__.closeModal)(_modules_init_modals__WEBPACK_IMPORTED_MODULE_1__.modalMessage);
            }
            form.submit();
            (0,_utils_modal__WEBPACK_IMPORTED_MODULE_0__.openModal)(_modules_init_modals__WEBPACK_IMPORTED_MODULE_1__.modalSuccess);
            closeBtn.addEventListener('click', () => {
              (0,_utils_modal__WEBPACK_IMPORTED_MODULE_0__.closeModal)(_modules_init_modals__WEBPACK_IMPORTED_MODULE_1__.modalSuccess);
            })
          }
        }
      });
    });

    inputs.forEach((element) => {
      element.addEventListener('input', () => {
        if (element.validity.valid) {
          element.parentElement.classList.remove(errorClass);
        }
      });
    });
  }
};




/***/ }),

/***/ "../app/js/utils/ie-fix.js":
/*!*********************************!*\
  !*** ../app/js/utils/ie-fix.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ieFix": () => (/* binding */ ieFix)
/* harmony export */ });
/* eslint-disable */
const ieFix = () => {
  // Polyfills
  //---------------------------------
  // forEach
  // CustomEvent
  // includes
  // matches
  // closest
  // prepend
  // append
  // before
  // remove
  // startsWith

  // forEach
  if (window.NodeList && !NodeList.prototype.forEach) {
    NodeList.prototype.forEach = function (callback, thisArg) {
      thisArg = thisArg || window;
      for (let i = 0; i < this.length; i++) {
        callback.call(thisArg, this[i], i, this);
      }
    };
  }

  // CustomEvent
  (function () {
    if (typeof window.CustomEvent === 'function') return false;
    function CustomEvent(event, params) {
      params = params || {bubbles: false, cancelable: false, detail: undefined};
      var evt = document.createEvent('CustomEvent');
      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
      return evt;
    }

    CustomEvent.prototype = window.Event.prototype;

    window.CustomEvent = CustomEvent;
  })();

  // includes
  if (!Array.prototype.includes) {
    Object.defineProperty(Array.prototype, 'includes', {
      value: function(searchElement, fromIndex) {

        if (this == null) {
          throw new TypeError('"this" is null or not defined');
        }

        var o = Object(this);

        var len = o.length >>> 0;

        if (len === 0) {
          return false;
        }

        var n = fromIndex | 0;

        var k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);

        function sameValueZero(x, y) {
          return x === y || (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));
        }

        while (k < len) {
          if (sameValueZero(o[k], searchElement)) {
            return true;
          }
          k++;
        }

        return false;
      }
    });
  }

  // matches
  if (!Element.prototype.matches) {
    Element.prototype.matches =
      Element.prototype.matchesSelector ||
      Element.prototype.mozMatchesSelector ||
      Element.prototype.msMatchesSelector ||
      Element.prototype.oMatchesSelector ||
      Element.prototype.webkitMatchesSelector ||
      function (s) {
        let matches = (this.document || this.ownerDocument).querySelectorAll(s);
        let i = matches.length;
        // eslint-disable-next-line no-empty
        while (--i >= 0 && matches.item(i) !== this) {}
        return i > -1;
      };
  }

  // closest
  if (!Element.prototype.matches) {
    Element.prototype.matches =
      Element.prototype.msMatchesSelector ||
      Element.prototype.webkitMatchesSelector;
  }

  if (!Element.prototype.closest) {
    Element.prototype.closest = function (s) {
      let el = this;

      do {
        if (el.matches(s)) {
          return el;
        }
        el = el.parentElement || el.parentNode;
      } while (el !== null && el.nodeType === 1);
      return null;
    };
  }

  // prepend
  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty(`prepend`)) {
        return;
      }
      Object.defineProperty(item, `prepend`, {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function prepend() {
          // eslint-disable-next-line prefer-rest-params
          let argArr = Array.prototype.slice.call(arguments);
          let docFrag = document.createDocumentFragment();

          argArr.forEach(function (argItem) {
            let isNode = argItem instanceof Node;
            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
          });

          this.insertBefore(docFrag, this.firstChild);
        },
      });
    });
  })([Element.prototype, Document.prototype, DocumentFragment.prototype]);

  // append
  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty(`append`)) {
        return;
      }
      Object.defineProperty(item, `append`, {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function append() {
          // eslint-disable-next-line prefer-rest-params
          let argArr = Array.prototype.slice.call(arguments);
          let docFrag = document.createDocumentFragment();

          argArr.forEach(function (argItem) {
            let isNode = argItem instanceof Node;
            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
          });

          this.appendChild(docFrag);
        },
      });
    });
  })([Element.prototype, Document.prototype, DocumentFragment.prototype]);

  // before
  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty(`before`)) {
        return;
      }
      Object.defineProperty(item, `before`, {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function before() {
          // eslint-disable-next-line prefer-rest-params
          let argArr = Array.prototype.slice.call(arguments);
          let docFrag = document.createDocumentFragment();

          argArr.forEach(function (argItem) {
            let isNode = argItem instanceof Node;
            docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));
          });

          this.parentNode.insertBefore(docFrag, this);
        },
      });
    });
  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);

  // remove
  (function (arr) {
    arr.forEach(function (item) {
      if (item.hasOwnProperty(`remove`)) {
        return;
      }
      Object.defineProperty(item, `remove`, {
        configurable: true,
        enumerable: true,
        writable: true,
        value: function remove() {
          if (this.parentNode !== null) {
            this.parentNode.removeChild(this);
          }
        },
      });
    });
  })([Element.prototype, CharacterData.prototype, DocumentType.prototype]);

  // startsWith
  if (!String.prototype.startsWith) {
    // eslint-disable-next-line no-extend-native
    Object.defineProperty(String.prototype, `startsWith`, {
      value(search, rawPos) {
        let pos = rawPos > 0 ? rawPos | 0 : 0;
        return this.substring(pos, pos + search.length) === search;
      },
    });
  }

  // Fixes
  //---------------------------------

  // ie download
  const ie11Download = (el) => {
    if (el.href === ``) {
      throw Error(`The element has no href value.`);
    }

    let filename = el.getAttribute(`download`);
    if (filename === null || filename === ``) {
      const tmp = el.href.split(`/`);
      filename = tmp[tmp.length - 1];
    }

    el.addEventListener(`click`, (evt) => {
      evt.preventDefault();
      const xhr = new XMLHttpRequest();
      xhr.onloadstart = () => {
        xhr.responseType = `blob`;
      };
      xhr.onload = () => {
        navigator.msSaveOrOpenBlob(xhr.response, filename);
      };
      xhr.open(`GET`, el.href, true);
      xhr.send();
    });
  };

  if (window.navigator.msSaveBlob) {
    const downloadLinks = document.querySelectorAll(`a[download]`);
    if (downloadLinks.length) {
      downloadLinks.forEach((el) => {
        ie11Download(el);
      });
    }
  }

  // ie svg focus fix
  const unfocusableSvg = () => {
    if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
      return;
    }

    const svg = document.querySelectorAll('svg');

    svg.forEach((el) => {
      el.setAttribute('focusable', 'false');
    });
  }

  unfocusableSvg();

  //ie footer nailing
  const ieFooterNailing = () => {
    const main = document.querySelector('main');
    const header = document.querySelector('.header');
    const footer = document.querySelector('.footer');

    let headerH;
    let footerH;
    let mainHMin;

    if (!main || !(!!window.MSInputMethodContext && !!document.documentMode)) {
      return;
    }

    const mainHeight = () => {
      // eslint-disable-next-line no-unused-expressions
      header ? headerH = header.getBoundingClientRect().height : headerH = 0;
      // eslint-disable-next-line no-unused-expressions
      footer ? footerH = footer.getBoundingClientRect().height : footerH = 0;
      mainHMin = window.innerHeight;

      main.style.minHeight = mainHMin - (headerH + footerH) + 'px';
    };

    document.addEventListener('loadDOMContentLoaded', mainHeight());
    window.addEventListener('resize', mainHeight);
  };

  ieFooterNailing();
};




/***/ }),

/***/ "../app/js/utils/ios-vh-fix.js":
/*!*************************************!*\
  !*** ../app/js/utils/ios-vh-fix.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "iosVhFix": () => (/* binding */ iosVhFix)
/* harmony export */ });
const isIos = () => {
  return [
    'iPad Simulator',
    'iPhone Simulator',
    'iPod Simulator',
    'iPad',
    'iPhone',
    'iPod'
  ].includes(navigator.platform)
  // iPad on iOS 13 detection
  || (navigator.userAgent.includes('Mac') && 'ontouchend' in document);
};

const iosVhFix = () => {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (isIos()) {
      let vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', `${vh}px`);

      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', `${vh}px`);
      });
    }
  }
};




/***/ }),

/***/ "../app/js/utils/modal.js":
/*!********************************!*\
  !*** ../app/js/utils/modal.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "closeModal": () => (/* binding */ closeModal),
/* harmony export */   "openModal": () => (/* binding */ openModal),
/* harmony export */   "setupModal": () => (/* binding */ setupModal)
/* harmony export */ });
/* harmony import */ var _scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scroll-lock */ "../app/js/utils/scroll-lock.js");


const openModal = (modal, callback, preventScrollLock) => {
  modal.classList.add('modal--active');

  if (callback) {
    callback();
  }

  if (!preventScrollLock) {
    (0,_scroll_lock__WEBPACK_IMPORTED_MODULE_0__.disableScrolling)();
  }
};

const closeModal = (modal, callback, preventScrollLock) => {
  modal.classList.remove('modal--active');

  if (callback) {
    callback();
  }

  if (!preventScrollLock) {
    setTimeout(_scroll_lock__WEBPACK_IMPORTED_MODULE_0__.enableScrolling, 300);
  }
};

const onEscPress = (evt, modal, callback) => {
  const isEscKey = evt.key === 'Escape' || evt.key === 'Esc';

  if (isEscKey && modal.classList.contains('modal--active')) {
    evt.preventDefault();
    closeModal(modal, callback);
  }
};

const setModalListeners = (modal, closeCallback, preventScrollLock) => {
  const overlay = modal.querySelector('.modal__overlay');
  const closeBtn = modal.querySelector('.modal__close-btn');

  closeBtn.addEventListener('click', () => {
    closeModal(modal, closeCallback, preventScrollLock);
  });

  overlay.addEventListener('click', () => {
    closeModal(modal, closeCallback, preventScrollLock);
  });

  document.addEventListener('keydown', (evt) => {
    onEscPress(evt, modal, closeCallback, preventScrollLock);
  });
};

const setupModal = (modal, closeCallback, modalBtns, openCallback, noPrevDefault, preventScrollLock) => {
  if (modalBtns) {
    modalBtns.forEach((btn) => {
      btn.addEventListener('click', (evt) => {
        if (!noPrevDefault) {
          evt.preventDefault();
        }
        openModal(modal, openCallback, preventScrollLock);
      });
    });
  }

  setModalListeners(modal, closeCallback, preventScrollLock);
};




/***/ }),

/***/ "../app/js/utils/scroll-lock.js":
/*!**************************************!*\
  !*** ../app/js/utils/scroll-lock.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "disableScrolling": () => (/* binding */ disableScrolling),
/* harmony export */   "enableScrolling": () => (/* binding */ enableScrolling)
/* harmony export */ });
const body = document.querySelector('body');

// eslint-disable-next-line consistent-return
const getScrollbarWidth = () => {
  const outer = document.createElement('div');
  outer.style.visibility = 'hidden';
  outer.style.overflow = 'scroll';
  outer.style.msOverflowStyle = 'scrollbar';
  body.appendChild(outer);
  const inner = document.createElement('div');
  outer.appendChild(inner);
  const scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);
  outer.parentNode.removeChild(outer);
  if (body.offsetHeight > window.innerHeight) {
    return scrollbarWidth;
  }
};

const getBodyScrollTop = () => {
  return (
    self.pageYOffset ||
    (document.documentElement && document.documentElement.ScrollTop) ||
    (body && body.scrollTop)
  );
};

const disableScrolling = (noScrollbar) => {
  if (!noScrollbar) {
    const scrollWidth = getScrollbarWidth();
    body.setAttribute('style', `padding-right: ${scrollWidth}px;`);
  }
  body.dataset.scrollY = `${getBodyScrollTop()}`;
  body.style.top = `-${body.dataset.scrollY}px`;
  body.classList.add('scroll-lock');
};

const enableScrolling = () => {
  body.removeAttribute('style');
  body.classList.remove('scroll-lock');
  window.scrollTo(0, +body.dataset.scrollY);
};




/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!*************************!*\
  !*** ../app/js/main.js ***!
  \*************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ie_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ie-fix */ "../app/js/utils/ie-fix.js");
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "../app/js/utils/ios-vh-fix.js");
/* harmony import */ var _modules_init_modals__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/init-modals */ "../app/js/modules/init-modals.js");
/* harmony import */ var _modules_init_menu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/init-menu */ "../app/js/modules/init-menu.js");
/* harmony import */ var _modules_validate_form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/validate-form */ "../app/js/modules/validate-form.js");







// Utils
// ---------------------------------

(0,_utils_ie_fix__WEBPACK_IMPORTED_MODULE_0__.ieFix)();
(0,_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_1__.iosVhFix)();

// Modules
// ---------------------------------

(0,_modules_init_modals__WEBPACK_IMPORTED_MODULE_2__.initModals)();
(0,_modules_init_menu__WEBPACK_IMPORTED_MODULE_3__.initMenu)();
(0,_modules_validate_form__WEBPACK_IMPORTED_MODULE_4__.validateForm)();

})();

/******/ })()
;
//# sourceMappingURL=main.min.js.map